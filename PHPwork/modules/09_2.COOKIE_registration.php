<?php
ob_start(); //запустить output_buffering
ini_set('output_buffering', 'On'); //включить буферизацию(возможно нужно еще раскоментить в файле php.ini)
// Чтобы можно было менять куки
?>
<?php
							// Лекция 9 -продолжение
				// Cookies
// Cookies – небольшой фрагмент данных, отправляемый веб-сервером и хранимый на компьютере пользователя.
// Принцип работы:
// 1. сервер в HTTP-заголовках передает файлы cookies;
// 2. браузер сохраняет полученные файлы cookies;
// 3. при загрузке следующей страницы из того же домена, что и страница, содержавшая cookies, браузер возвращает те cookies, которые уже были сохранены ранее;
// 4. при получении cookies РНР преобразовывает их в переменные. Они сохраняются в глобальном массиве $_COOKIE.

// Отправка cookie
// int setcookie (
//     string name [, string value [, int expire
//     [, string path [, string domain [, bool secure [, bool httponly >]
// )
// Функция посылает переменную cookie в заголовке HTTP.
// name – имя cookie.
// value – значение, которое необходимо сохранить.
// expire – время хранения cookie в формате UNIX time.
// path, domain – можно указать список каталогов и домен, 
// для которого необходимо возвращать значения cookie.
// secure – передать cookie в зашифрованном виде через протокол HTTPS.
// httponly – cookie будут доступны только через HTTP протокол.
// В этом случае не будут доступны скриптовым языкам, вроде JavaScript.

// пример уситановки
// setcookie('TestCookie1', 'Test Value');
// # Устаревает через час
// setcookie('TestCookie2', $value, time() + 3600);
// setcookie(
//     'TestCookie3', $value, time() + 3600,
//     '/~igor/', '.spb.ru', 1, 1
// );

//Удаление cookie
// # Удаляет cookie
// setcookie('TestCookie1');
// # Set the expiration date to one hour ago
// setcookie('TestCookie2', '', time() - 3600); #время уже прошло
// setcookie(
//     'TestCookie3', '', time() - 3600, '/~igor/', '.spb.ru', 1, 1
// );


	//задача - авторизация и регистрация пользователей

//ini_set('output_buffering', on); //делать в начале всего документа
require_once "registration_for09_2.php"; //подключаем файл с ф-циями обработки
if (!empty($_POST['login'])) { //если логин введен ( empty() возвращает FALSE, если переменная существует,
// и содержит непустое и ненулевое значение(но пробел это не пустое значение), в противном случае
// возвращает TRUE. )
	if (!login()) { // пытаемся авторизовать и затем проверяем получилось ли
		echo "<p>Ошибка авторизации: неверный пароль.</p>";
	}
}
if (!empty($_GET['logout'])) //если нажали на выход - установилось значение logout=1
							// следовательно проверяем если значение в $_GET['logout'] есть, то
	logOut(); // то выходим
//проверяем авторизован ли пользователь
if (isLogin()) {
	echo "<h1>Добро пожаловать ".getUserName()." !</h1>".
	"<p><a href='09_2.COOKIE_registration.php?logout=1'>Выход</a></p>";// ?logout=1 - этим установили что
	// при клике по ссылке будут установлен параметр logout в значение 1 и помещен 
	// в массив $_GET ($_GET['logout' => 1])
} else {
	printFoamLogin(); //ф-ция вывода формы ввода логина
}

// для правки и наглядности выводим
echo "<pre>";
echo "cookie:\n";
print_r($_COOKIE);// "запаздывает"
echo "POST:\n";
print_r($_POST);
echo "</pre>";

?>