<?php
//сортировка по возрастанию - метод пузырька

$js = []; //
//заполним массив(рандомно)
while(count($js) < 20) {
	$rnd = rand(1,100);
	if (!in_array($rnd, $js)) $js[]=$rnd; //in_array - проверяет есть ли в массиве значение
	//то есть проверяем если значения $rnd нет в массиве, то добавляем это значение, иначе формируется новое
	// новое рандомное значение
}

//перебрать все элементы массива
//для каждого элемента проводим сравнение со всеми следующими
//для каждого из следующих за текущим элементом производим сравнение с текущим
// и если элемент меньше текущего, то меняем их местами
// $len = count($js);
// for($i=0; $i<$len; $i++) {
// 	for($j=$i+1; $j<$len; $j++) {
// 		if($js[$j] < $js[$i] ) {
// 			$k = $js[$i];
// 			$js[$i] = $js[$j];
// 			$js[$j] = $k;
// 		}
// 	}
// }

//сделать ф-цию сортировки
function my_sort(&$arr, $rule) { //принимаем ССЫЛКУ на массив(чтобы внутри ф-йии менять массив)
							// + принимать правило сортировки(чтобы иметь возможность сортировать по возраст/убыв)
	$len = count($arr);
	for($i=0; $i<$len; $i++) {
		for($j=$i+1; $j<$len; $j++) {
			if(!$rule($arr[$i],$arr[$j])) {
			$k = $arr[$i];
			$arr[$i] = $arr[$j];
			$arr[$j] = $k;
		}
	}
}
}
function mass($a, $b) {
	return ($a<$b);
}
my_sort($js,"mass");

echo "<pre>";
var_dump($js);
echo "</pre>";


//рассмотреть задачу ТРАССЕРОВКА
#

//пример обращения к переменной по ее строковому значению
$var1 = "end";
$var2 = "var1";
$var3 = "var2";
$var4 = "var3";
$var5 = "var4";

$my = 'var1'
echo $$my;	// обращаемся к переменной по имени в строке. Значение $my это строка 'var1' и получается
// что мы обращаемся $'var1' и результат будет end, так как $var1 = "end"