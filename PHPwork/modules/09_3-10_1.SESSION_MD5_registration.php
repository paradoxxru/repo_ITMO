<?php
ob_start(); //запустить output_buffering
ini_set('output_buffering', 'On'); //включить буферизацию(возможно нужно еще раскоментить в файле php.ini)
// Чтобы можно было менять куки
session_start(); // "открыли" сессии
?>
<?php
			//Лекция 9 продолжение - 10 - начало
// Сессия
// Поддержка сессий в PHP заключается в способе сохранения данных между несколькими 
// последовательными запросами пользователя.
// Пользователю присваивается уникальный идентификатор сессии.
// Он хранится либо в cookie, либо передается через URL.
// Данные между запросами сохранаются в суперглобальном массиве $_SESSION.
// Когда пользователь выполняет запрос, PHP проверяет наличие идентификатора сессии и 
// восстанавливает сохраненное ранее окружение.

// всегда есть жесткая связь между сессией и куки (через ID сессии)
// ID сессии можно украсть!

//Параметры сессии
// string session_name ([ string name])
// Возвращает имя текущей сессии.
// Если передан аргумент name, то изменяет имя сессии.
// string session_id ([ string id])
// Возвращает идентификатор текущей сессии.
// Если передан аргумент id, то изменяет идентификатор сессии.
// string session_save_path ([ string path])
// Возвращает имя каталога, в котором сохранаются файлы сессий.
// Если передан аргумент path, то изменяет каталог на переданный.
// void session_set_cookie_params ( <эквивалентны setcookie()> )
// Установка параметров cookie сессии (кроме имени и значения).
// array session_get_cookie_params ( void )
// Возвращает параметры cookie сессии.

//Инициализация/уничтожение данных сессии
// bool session_start ( void )
// Создает массив данных сессии или восстанавливает ранее сохраненные переменные сессии.
// bool session_destroy ( void )
// Уничтожает все данные, принадлежащие текущей сессии.
// bool session_regenerate_id ( void )
// Заменяет значение идентификатора текущей сессии новым автоматически сгенерированным значением.
// Все данные сессии сохранаются.

//Хранение значений
// $_SESSION['username'] = 'kyzima-spb';
// Добавление переменной сессии.
// unset($_SESSION['username']);
// Удаление переменной сессии.
// isset($_SESSION['username']);
// Проверка принадлежности переменной к сессии.
// void session_unset ( void )
// Удаление всех переменных текущей сессии.

if (isset($_SESSION['counter'])) {
	$_SESSION['counter']++;
} else $_SESSION['counter'] = 1; // создали счетчик посещений страницы
echo "Вы открывали эту страницу ".$_SESSION['counter']. " раз";
//выводим суперглобальным массив $_SESSION
echo "<pre>";
echo "SESSION:\n";
print_r($_SESSION);
echo "</pre>";

								// задача
// таже задача - регистрация и авторизация пользователей, но с шифрованием, Сессией и токеном
// всегда есть жесткая связь между сессией и куки (через ID сессии)
// ID сессии можно украсть через куки(могут украсть все куки)! Поэтому что-либо в массиве $_COOKIE 
// хранить не безопасно. Будем хранить логин в массиве $_SESSION (он доступен только со стороны сервера)
//Так же могут украсть файл где храняться логины и пароли, поэтому надо хранить пароли в зашифрованном виде
// Один из вариантов - хранить хэш паролей, а не сами пароли(то есть в файл будем писать логин:хэш пароля).

// то есть:
// хранить пароль в сессии а не в куки
// хранить пароль в хэш
// чтобы не украли сессию - создать токен
require_once "registration_for09_3-10_1.php";	//подключаем файл с ф-циями обработки
if (!empty($_POST['login'])) { //если логин введен( empty() возвращает FALSE, если переменная существует,
// и содержит непустое и ненулевое значение(но пробел это не пустое значение), в противном случае
// возвращает TRUE. )
	if (!login()) { // пытаемся авторизовать и затем проверяем получилось ли
		echo "<p>Ошибка авторизации: неверный пароль.</p>";
	}
}
if (!empty($_GET['logout'])) //если нажали на выход - установилось значение logout=1(см.ниже)
							// следовательно проверяем если значение в $_GET['logout'] есть, то
	logOut(); // то выходим
//проверяем авторизован ли пользователь
if (isLogin()) {
	echo "<h1>Добро пожаловать ".getUserName()." !</h1>".
	"<p><a href='09_3-10_1.SESSION_MD5_registration.php?logout=1'>Выход</a></p>"; // ?logout=1 - этим установили что при клике по ссылке будут
	// установлен параметр logout в значение 1 и помещен в массив $_GET ($_GET['logout' => 1])
} else {
	printFormLogin(); //ф-ция вывода формы ввода логина и пароля
}

echo "<pre>";
echo "cookie:\n";
print_r($_COOKIE);// "запаздывает"
echo "POST:\n";
print_r($_POST);
echo "SESSION:\n";
print_r($_SESSION);
echo "</pre>";
?>
