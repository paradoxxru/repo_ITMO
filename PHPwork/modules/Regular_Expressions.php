<?php
$mystr2 = '123st456wq789qq0';
$mystr = 'wqswqwtwqwsttqwqttswwqqqsssttttqwwqstwq';
//preg_match_all("/([st]+)([wq]+)([qq]+)/", $mystr2, $matches);
preg_match_all("/([st]+)[0-9]*([wq]+)/", $mystr2, $matches);
/*
([st]+)[0-9]*([wq]+) - это значит что будет искаться сначала символ s или/и t , каждый из которых может повторяться
один и более раз; затем должна идти цыфра/цыфры от 0 до 9, повторяющиеся 0 и более раз, а затем должн/должны идти символ w или/и q , каждый из которых может повторяться один и более раз.
[st]+  -это значит идут подряд символы s и/или t (один и более символов) 
() - круглые скобки только показывают, какую именно найденную часть отобразить в результате(поместить в массив $matches)
[st] - это символ - либо s, либо t
[st]{1} - это один символ, либо s, либо t
{1} - это квантификатор, т.е. указание, сколько повторений
также можно использовать формат {0,1} - это 0 или 1 повторение
{1-5} - это от 1 до 5 повторений
*?+ это тоже квантификаторы
? - То же самое, что и {0,1}
* - это от 0 до бесконечности повторений
+ - это от 1 до бесконечности повторений

*/
echo "вывод массива matches: ";echo "<br>";
            echo "<pre>",
            var_dump($matches),
            "</pre>";

preg_match_all("|<[^>]+>(.*)</[^>]+>|U", 
    "<b>example: </b><div align=left>this is a test</div>", 
    $out, PREG_PATTERN_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
echo "<br>";
echo "вывод массива out: ";echo "<br>";
echo "<pre>",
var_dump($out),
"</pre>";
?>